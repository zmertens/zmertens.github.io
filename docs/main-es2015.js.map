{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/mock-repoes.ts","./src/app/repo-detail/repo-detail.component.ts","./src/app/repo-detail/repo-detail.component.html","./src/app/repo-list/repo-list.component.ts","./src/app/repo-list/repo-list.component.html","./src/app/repo.service.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngSite';\n}\n","<div>\n    <app-user></app-user>\n    <app-repo-list></app-repo-list>\n    <app-repo-detail></app-repo-detail>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { RepoListComponent } from './repo-list/repo-list.component';\nimport { RepoDetailComponent } from './repo-detail/repo-detail.component';\nimport { UserComponent } from './user/user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RepoListComponent,\n    RepoDetailComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Repo } from './repo';\r\n\r\nexport const REPOES = [\r\n    { id: 7, name: 'zmertens.github.io', description: 'A list of repoes' },\r\n    { id: 8, name: 'github.com/zmertens/compute', description: 'computing raytraces with gpu power' },\r\n    { id: 9, name: 'github.com/zmertens/SeqAndDestroy', description: 'Battling DNA sequences' }\r\n]","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms/forms';\nimport { RepoService } from '../repo.service';\n\n@Component({\n  selector: 'app-repo-detail',\n  templateUrl: './repo-detail.component.html',\n  styleUrls: ['./repo-detail.component.css']\n})\nexport class RepoDetailComponent implements OnInit {\n\n  constructor(private repoService: RepoService) { }\n\n  ngOnInit(): void {\n  }\n\n  submit(f: NgForm): void {\n    if (f.valid) {\n      let name = f.controls['input1'].value;\n      let desc = f.controls['input2'].value;\n      // console.log(`repo name: ${name}, repo desc: ${desc}`);\n      // Assume repo id's are sequential\n      let repoLastId;\n      this.repoService.getRepoes().subscribe(repoes => {\n        repoLastId = repoes[repoes.length - 1].id++;\n      });\n\n      this.repoService.addRepo({id: repoLastId, name: name, description: desc});\n\n      f.resetForm();\n    }\n  }\n}\n","<form #myForm=\"ngForm\" (ngSubmit)=\"submit(myForm)\">\n  <div>\n    <label id=\"label1\" for=\"input1\">Repo Name (URL): </label>\n    <input type=\"text\" name=\"input1\" placeholder=\"repo name\" required ngModel />\n  </div>\n  <div>\n    <label id=\"label2\" for=\"input2\">Repo Description: </label>\n    <input type=\"text\" name=\"input2\" placeholder=\"repo description\" required ngModel />\n  </div>\n  <div>\n    <button type=\"submit\" id=\"submitBtn\" class=\"btn btn-primary\">Submit</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { RepoService } from '../repo.service';\nimport { Repo } from '../repo'\n\n@Component({\n  selector: 'app-repo-list',\n  templateUrl: './repo-list.component.html',\n  styleUrls: ['./repo-list.component.css']\n})\nexport class RepoListComponent implements OnInit {\n  repoes: Repo[] = [];\n\n  constructor(private repoService: RepoService) { }\n\n  ngOnInit(): void {\n    this.repoService.getRepoes().subscribe(repoes => this.repoes = repoes);\n  }\n\n}\n","\n<div>\n    <ul *ngFor=\"let repo of repoes\">\n        <li><a href={{repo.name}} target=\"_blank\"><span>{{repo.name}} <br />{{repo.description}}</span></a></li>\n    </ul>\n</div>\n","import { Injectable } from '@angular/core';\nimport { REPOES } from './mock-repoes';\nimport { Repo } from './repo';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepoService {\n\n  constructor() { }\n\n  getRepoes(): Observable<Repo[]> {\n    const repoes = of(REPOES)\n    return repoes;\n  }\n\n  addRepo(repo: Repo): void {\n    REPOES.push(repo);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  userName: string = 'zmertens'\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <img class=\"profile\" src=\"/assets/githubProfilePic.png\" width=\"480\" height=\"200\" aria=\"user-profile\" />\n    <label id=\"user\">{{userName}}</label>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}